public int[] sortedSquares(int[] nums) {
    if (nums.length == 0) return nums;
    
    int pos = 0;
    while (pos < nums.length && nums[pos] < 0) {
        pos++;
    }
    
    int[] res = new int[nums.length];
    
    if (pos != 0) {
        
        int left = pos - 1;
        int right = pos;
        int k = 0;
        
        while (left >= 0 && right < nums.length) {
            int sqValLeft = nums[left] * nums[left];
            int sqValRight = nums[right] * nums[right];
            
            if (sqValLeft < sqValRight) {
                res[k++] = sqValLeft;
                left --;
            } else {
                res[k++] = sqValRight;
                right++;
            }
        
        }
        
        while (left >= 0) {
            int sqVal = nums[left] * nums[left];
            res[k++] = sqVal;
            left--;
            
        }
        
        while (right < nums.length) {
            int sqVal = nums[right] * nums[right];
            res[k++] = sqVal;
            right++;
        }
    } else {
        for (int i = 0; i < nums.length; i++) {
            int squareVal = nums[i] * nums[i];
            nums[i] = squareVal;
        }
        return nums;
    }
    
    return res;
}
